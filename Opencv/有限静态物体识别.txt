import cv2
import numpy as np
import contour

webcam = False
path ='C:\\Users\\Radein\\Desktop\\sth nothing\\Pro\\measure.jpg'

def getContours(img,cThr = [100,100],showCanny = False,minArea = 1000,filter = 0,draw = False):
    imgGray = cv2.cvtColor(img , cv2.COLOR_RGB2GRAY)
    imgBlur = cv2.GaussianBlur(imgGray,(5,5),1)
    imgCanny = cv2.Canny(imgBlur,cThr[0],cThr[1])
    kernel = np.ones((5,5),np.uint8)
    imgDial = cv2.dilate(imgCanny,kernel,iterations=3)
    imgThre = cv2.erode(imgDial,kernel,iterations=2)

    if showCanny:cv2.imshow('Canny',imgThre)
    finalCountours = []
    contours , hiearchy = cv2.findContours(imgThre,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)
    for i in contours:
        area = cv2.contourArea(i)
        if area > minArea:
            peri = cv2.arcLength(i,True)
            approx = cv2.approxPolyDP(i,0.02*peri,True)
            bbox = cv2.boundingRect(approx)
            if filter > 0:
                if len(approx) == filter:
                    finalCountours.append([len(approx),area,approx,bbox,i])
            else:
                finalCountours.append([len(approx),area,approx,bbox,i])

    finalCountours = sorted(finalCountours,key = lambda x:x[1] ,reverse=True)
    if draw:
        for con in finalCountours:
            cv2.drawContours(img,con[4],-4,(0,255,0),4)

    return img, finalCountours

def reorder(mypoints):
    print(mypoints.shape)
    mypointsnew = np.zeros_like(mypoints)
    mypoints = mypoints.reshape((4,2))
    add = mypoints.sum(1)
    mypointsnew[0] = mypoints[np.argmin(add)]
    mypointsnew[3] = mypoints[np.argmax(add)]
    diff = np.diff(mypoints,axis=1)
    mypointsnew[1] = mypoints[np.argmin(diff)]
    mypointsnew[2] = mypoints[np.argmax(diff)]
    return mypointsnew

def warpimg(img,points,w,h):
    points = reorder(points)
    pts1 = np.float32(points)
    pts2 = np.float32([[0,0],[w,0],[0,h],[w,h]])
    matrix = cv2.getPerspectiveTransform(pts1,pts2)
    imgwarp = cv2.warpPerspective(img,matrix,(w,h))
    return imgwarp

while True:
    if webcam:  img = cap.read()
    else: img = cv2.imread(path)
    img = cv2.resize(img, (0, 0), None, 0.5, 0.5)
    img , conts= getContours(img,minArea=5000,filter=4,draw = True,showCanny=False)
    cv2.imshow('img',img)
    if len(conts) != 0:
        biggest = conts[0][2]
    imgwarp = warpimg(img,biggest,210,297)
    cv2.imshow('out',imgwarp)
    key = cv2.waitKey(1)
    if key ==27:
        break

